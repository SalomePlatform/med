// Copyright (C) 2007-2016  CEA/DEN, EDF R&D, OPEN CASCADE
//
// Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
// CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//

#ifndef _MED_EVENTLISTENER_IDL_
#define _MED_EVENTLISTENER_IDL_

#include "SALOME_GenericObj.idl"

module MEDCALC
{
  enum MedEventType {
    EVENT_PUT_IN_WORKSPACE,
    EVENT_REMOVE_FROM_WORKSPACE,
    EVENT_UPDATE_FIELD,
    EVENT_CLEAN_WORKSPACE,
    EVENT_ADD_DATASOURCE,
    EVENT_ADD_PRESENTATION,
    EVENT_REMOVE_PRESENTATION,
    EVENT_MODIFY_PRESENTATION,
    EVENT_CHANGE_UNDERLYING_MESH,
    EVENT_INTERPOLATE_FIELD,
    EVENT_PLAY_TEST,
    EVENT_QUIT_SALOME,
    EVENT_ERROR,
    EVENT_UNKNOWN
  };

  struct MedEvent {
    MedEventType  type;
    long          dataId;
    string        filename;
    long          presentationId;
    string        msg;
  };

  interface MEDEventListener: SALOME::GenericObj {
    void processMedEvent(in MedEvent event);
  };
};

#endif
